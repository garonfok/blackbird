//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "parts_instruments")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub part_id: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub instrument_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::instruments::Entity",
        from = "Column::InstrumentId",
        to = "super::instruments::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Instruments,
    #[sea_orm(
        belongs_to = "super::parts::Entity",
        from = "Column::PartId",
        to = "super::parts::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Parts,
}

impl Related<super::instruments::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Instruments.def()
    }
}

impl Related<super::parts::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Parts.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
