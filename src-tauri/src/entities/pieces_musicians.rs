//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "pieces_musicians")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub piece_id: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub musician_id: i32,
    #[sea_orm(primary_key, auto_increment = false)]
    pub role: String,
    pub order: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::musicians::Entity",
        from = "Column::MusicianId",
        to = "super::musicians::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Musicians,
    #[sea_orm(
        belongs_to = "super::pieces::Entity",
        from = "Column::PieceId",
        to = "super::pieces::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Pieces,
}

impl Related<super::musicians::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Musicians.def()
    }
}

impl Related<super::pieces::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Pieces.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
