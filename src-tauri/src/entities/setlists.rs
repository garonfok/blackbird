//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "setlists")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: String,
    pub created_at: String,
    pub updated_at: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::pieces_setlists::Entity")]
    PiecesSetlists,
}

impl Related<super::pieces_setlists::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PiecesSetlists.def()
    }
}

impl Related<super::pieces::Entity> for Entity {
    fn to() -> RelationDef {
        super::pieces_setlists::Relation::Pieces.def()
    }
    fn via() -> Option<RelationDef> {
        Some(super::pieces_setlists::Relation::Setlists.def().rev())
    }
}

impl ActiveModelBehavior for ActiveModel {}
